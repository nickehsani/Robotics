import picamera
import picamera.array
import time
import cv2
import numpy as np


camera = picamera.PiCamera()
camera.resolution = (640, 480)
camera.framerate = 60
camera.vflip = False
camera.hflip = True


rawframe = picamera.array.PiRGBArray(camera, size = (640,480))

def nothing(x):
    pass

time.sleep(1)


# Main Program

if __name__ == '__main__':
    try:

        # Video stream that will only display red objects
        for frame in camera.capture_continuous(rawframe, format = "bgr", use_video_port = True):

            rawframe.truncate(0)

            image = frame.array

            blurred_masked = cv2.GaussianBlur(image, (5,5), 0) 

            image_hsv = cv2.cvtColor(blurred_masked, cv2.COLOR_BGR2HSV)

            lower_red = np.array([0, 153, 41])
            upper_red = np.array([255, 255, 255])

            ourmask = cv2.inRange(image_hsv, lower_red, upper_red)

            image_masked = cv2.bitwise_and(image, image, mask = ourmask)

            _, contours, _ = cv2.findContours(ourmask, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)

            cv2.drawContours(image, contours, -1, (0,255,0), 3)

            cv2.imshow("Masked image", image_masked)
            cv2.imshow("blurred image", blurred_masked)
            cv2.imshow("image", image)

            cv2.waitKey(1)


    except KeyboardInterrupt:
        print("Program stopped by User")
        cv2.destroyAllWindows()
        camera.close()






